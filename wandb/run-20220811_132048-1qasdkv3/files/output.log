
The base dimension of your u-net should ideally be no smaller than 128, as recommended by a professional DDPM trainer https://nonint.com/2022/05/04/friends-dont-let-friends-train-small-diffusion-models/
Epoch 1/5
--- Unet 1 ---
<torch.utils.data.dataloader.DataLoader object at 0x7f3204127fd0>









Train Step 10/164 --- Loss: 0.6480 unet 2 has not been trained
when sampling, you can pass stop_at_unet_number to stop early in the cascade, so it does not try to generate with untrained unets
0it [00:00, ?it/s]
















































0it [01:36, ?it/s] step: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊| 999/1000 [01:35<00:00, 10.33it/s]
checkpoint saved to /datadrive/checkpoint/imagen_small_checkpoint.pt









Train Step 20/164 --- Loss: 0.6306
0it [00:00, ?it/s]
Train Step 20/164 --- Loss: 0.6306 unet 2 has not been trained
















































0it [01:35, ?it/s] step: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1000/1000 [01:35<00:00, 10.40it/s]
checkpoint saved to /datadrive/checkpoint/imagen_small_checkpoint.pt



Train Step 24/164 --- Loss: 0.6193
Traceback (most recent call last):
  File "/home/azureuser/imagen/spaceforge/train.py", line 270, in <module>
    run_train_loop(cfg, trainer, loader, device, i=cfg["train"]["unet_number"])
  File "/home/azureuser/imagen/spaceforge/train.py", line 144, in run_train_loop
    train(cfg, dataloader, trainer, epoch, i, device)
  File "/home/azureuser/imagen/spaceforge/train.py", line 87, in train
    loss = trainer(
  File "/home/azureuser/miniconda3/envs/imagen/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/azureuser/miniconda3/envs/imagen/lib/python3.9/site-packages/imagen_pytorch/trainer.py", line 130, in inner
    out = fn(model, *args, **kwargs)
  File "/home/azureuser/miniconda3/envs/imagen/lib/python3.9/site-packages/imagen_pytorch/trainer.py", line 925, in forward
    self.accelerator.backward(loss)
  File "/home/azureuser/miniconda3/envs/imagen/lib/python3.9/site-packages/accelerate/accelerator.py", line 882, in backward
    self.scaler.scale(loss).backward(**kwargs)
  File "/home/azureuser/miniconda3/envs/imagen/lib/python3.9/site-packages/torch/_tensor.py", line 396, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/home/azureuser/miniconda3/envs/imagen/lib/python3.9/site-packages/torch/autograd/__init__.py", line 173, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt