
The base dimension of your u-net should ideally be no smaller than 128, as recommended by a professional DDPM trainer https://nonint.com/2022/05/04/friends-dont-let-friends-train-small-diffusion-models/
Epoch 1/8
--- Unet 2 ---
<torch.utils.data.dataloader.DataLoader object at 0x7f03171d21f0>
Traceback (most recent call last):
  File "/home/azureuser/imagen/spaceforge/train.py", line 271, in <module>
    run_train_loop(cfg, trainer, loader, device, i=cfg["train"]["unet_number"])
  File "/home/azureuser/imagen/spaceforge/train.py", line 146, in run_train_loop
    train(cfg, dataloader, trainer, epoch, unet_num, device)
  File "/home/azureuser/imagen/spaceforge/train.py", line 87, in train
    loss = trainer(
  File "/home/azureuser/miniconda3/envs/imagen/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/azureuser/miniconda3/envs/imagen/lib/python3.9/site-packages/imagen_pytorch/trainer.py", line 130, in inner
    out = fn(model, *args, **kwargs)
  File "/home/azureuser/miniconda3/envs/imagen/lib/python3.9/site-packages/imagen_pytorch/trainer.py", line 910, in forward
    self.validate_and_set_unet_being_trained(unet_number)
  File "/home/azureuser/miniconda3/envs/imagen/lib/python3.9/site-packages/imagen_pytorch/trainer.py", line 419, in validate_and_set_unet_being_trained
    assert not exists(self.only_train_unet_number) or self.only_train_unet_number == unet_number, 'you cannot only train on one unet at a time. you will need to save the trainer into a checkpoint, and resume training on a new unet'
AssertionError: you cannot only train on one unet at a time. you will need to save the trainer into a checkpoint, and resume training on a new unet